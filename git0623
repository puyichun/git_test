$ git branch #看分支
$ git branch dog ＃開新分支
要讓dog往前，必須把head給他

git checkout
<!-- 移動head -->

換分支名字
git checkout dog
git branch -m cat
ddd
切換分支
$ git switch dog ＃移轉head給dog(head就是你現在的所在地)
專案會變成head 指到的位置

假設在/projects/vote/進行初始化 init ,那就不要對/projects/這個資料夾進行初始化，會造成槽狀結構
$ rm -rf .git ＃(刪掉初始化資料)（小心）（確定好所在位置）

#合併分支
＄ git merge cat
隱藏主詞current branch，會融在現在的分支
如果有衝突，修正好後commit就好

＃Fast-forward 快轉

砍掉分支 cat $ git branch -d cat

兩個分支合併 dog和cat ＄git merge cat -m ".....“
"有兩個分支 dog和cat ,head 在dog ,＄ giy rebase cat # 把dog接在後面cat
rebase 優點：比較簡潔 。如果在意歷史紀錄，用merge

git reset 想要回到的位置 --mixed/soft/hard
mixed:默認使用，把資料丟回工作目錄 soft: 把資料丟回暫存 hard:資料都不留

git reset HEAD~2  #我想要回到ＨＥＡＤ的前2個狀態
git reset HEAD/^ --hard #我想要回到ＨＥＡＤ的前1個狀態

git reflog #HEAD的移動紀錄，用來找「已刪掉」的位置,按Ｑ離開
git reset ORIG_HEAD #ORIG_HEAD只會記錄一個「危險紀錄」
找誰寫得
git blame

<!--  -->

git pull/fetch/clone

git clone 
<!-- 全部複製下來 -->


git add xxx.rb
如果xxx.rb被刪除了
git restore xxx.rb
git restore 會去暫存區把檔案撈回來
